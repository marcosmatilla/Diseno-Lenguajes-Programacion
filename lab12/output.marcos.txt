
#source 'input.1.txt'

	' * ArrayType{type=double, size=10} v (offset 0)

' Invocation to the main function
call main
halt

#line 4

 main:
	' * Parametros
	' * Variables Locales
	' * double value (offset -4)
	' * int i (offset -6)
	' * int j (offset -8)
	' * ArrayType{type=ArrayType{type=int, size=5}, size=4} w (offset -48)
	' * StructureType{structureFields=[StructureField{line=9, column=3, name='day', type=int}, StructureField{line=9, column=8, name='month', type=int}, StructureField{line=9, column=15, name='year', type=int}]} date (offset -54)
	enter 54

#line 12
	' * Read
	push bp
	pushi -54
	addi
	pushi 0
	addi
	ini
	storei

#line 13
	' * Assignment
	push bp
	pushi -54
	addi
	pushi 4
	addi
	pushb 97
	b2i
	storei

#line 14
	' * Assignment
	push bp
	pushi -54
	addi
	pushi 2
	addi
	push bp
	pushi -54
	addi
	pushi 0
	addi
	loadi
	push bp
	pushi -54
	addi
	pushi 4
	addi
	loadi
	muli
	pushi 12
	modi
	pushi 1
	addi
	storei

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi 0
	addi
	loadi
	outi

#line 15
	' * Write
	pushb 10
	outb

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi 2
	addi
	loadi
	outi

#line 15
	' * Write
	pushb 10
	outb

#line 15
	' * Write
	push bp
	pushi -54
	addi
	pushi 4
	addi
	loadi
	i2f
	outf

#line 15
	' * Write
	pushb 10
	outb

#line 17
	' * Read
	push bp
	pushi -4
	addi
	inf
	storef

#line 19
	' * Assignment
	push bp
	pushi -6
	addi
	pushi 0
	storei

#line 20
	' * While

 while1:
	push bp
	pushi -6
	addi
	loadi
	pushi 10
	lti
	jz while_end2
	' * Body

#line 21
	' * Assignment
	pusha 0
	push bp
	pushi -6
	addi
	pushi 4
	muli
	addi
	push bp
	pushi -4
	addi
	loadf
	storef

#line 22
	' * Write
	push bp
	pushi -6
	addi
	loadi
	outi

#line 22
	' * Write
	pushb 58
	outb

#line 22
	' * Write
	pusha 0
	push bp
	pushi -6
	addi
	pushi 4
	muli
	addi
	loadf
	outf

#line 22
	' * Write
	pushb 32
	outb

#line 23
	' * If
	push bp
	pushi -6
	addi
	loadi
	pushi 2
	modi
	jz else3

#line 24
	' * Write
	pushb 111
	outb

#line 24
	' * Write
	pushb 100
	outb

#line 24
	' * Write
	pushb 100
	outb

#line 24
	' * Write
	pushb 10
	outb
	jmp end_else3

 else3:

#line 26
	' * Write
	pushb 101
	outb

#line 26
	' * Write
	pushb 118
	outb

#line 26
	' * Write
	pushb 101
	outb

#line 26
	' * Write
	pushb 110
	outb

#line 26
	' * Write
	pushb 10
	outb

 end_else3:

#line 27
	' * Assignment
	push bp
	pushi -6
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while1

 while_end2:

#line 29
	' * Write
	pushb 10
	outb

#line 31
	' * Assignment
	push bp
	pushi -6
	addi
	pushi 0
	storei

#line 32
	' * While

 while4:
	push bp
	pushi -6
	addi
	loadi
	pushi 4
	lti
	jz while_end5
	' * Body

#line 33
	' * Assignment
	push bp
	pushi -8
	addi
	pushi 0
	storei

#line 34
	' * While

 while6:
	push bp
	pushi -8
	addi
	loadi
	pushi 5
	lti
	jz while_end7
	' * Body

#line 35
	' * Assignment
	push bp
	pushi -48
	addi
	push bp
	pushi -6
	addi
	pushi 10
	muli
	addi
	push bp
	pushi -8
	addi
	pushi 2
	muli
	addi
	push bp
	pushi -6
	addi
	loadi
	push bp
	pushi -8
	addi
	loadi
	addi
	storei

#line 36
	' * Write
	push bp
	pushi -48
	addi
	push bp
	pushi -6
	addi
	pushi 10
	muli
	addi
	push bp
	pushi -8
	addi
	pushi 2
	muli
	addi
	loadi
	outi

#line 36
	' * Write
	pushb 32
	outb

#line 37
	' * Assignment
	push bp
	pushi -8
	addi
	push bp
	pushi -8
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while6

 while_end7:

#line 39
	' * Write
	pushb 10
	outb

#line 40
	' * Assignment
	push bp
	pushi -6
	addi
	push bp
	pushi -6
	addi
	loadi
	pushi 1
	addi
	storei
	jmp while4

 while_end5:
	ret	0, 54, 0
